name: deb

on: 
  repository_dispatch:
    types: build-success
  push:
    branches:
    - develop
    - master
  pull_request:

env:
  BOOST_VERSION: 1_81_0

jobs:
  deb:

    env:
      VERSION: develop

    strategy:
      fail-fast: false
      matrix:
        image:
          - buster
          - bullseye
          - bookworm
        os: 
          - ubuntu-latest
          - self-hosted-rpi4
        include:
          - os: ubuntu-latest
            arch: "amd64"
            image_prefix: "debian:"
            image_suffix: ""
          - os: self-hosted-rpi4
            arch: "armhf"
            image_prefix: "badaix/raspios-"
            image_suffix: "-armhf-lite"
        exclude:
          - os: self-hosted-rpi4
            image: "bookworm"

    runs-on: ${{ matrix.os }}

    container:
      image: ${{matrix.image_prefix}}${{matrix.image}}${{matrix.image_suffix}}
    steps:
    - name: Get dependencies
      run: apt-get update && apt-get install -yq wget debhelper build-essential cmake git rename libatomic1 libasound2-dev libsoxr-dev libvorbisidec-dev libvorbis-dev libflac-dev libopus-dev alsa-utils libpulse-dev libavahi-client-dev avahi-daemon libexpat1-dev python3
      env:
        DEBIAN_FRONTEND: noninteractive
    - name: Checkout
      uses: actions/checkout@v3
    - name: Checkout Snapcast
      uses: actions/checkout@v3
      with:
        repository: badaix/snapcast
        path: src/snapcast
        ref: ${{ env.VERSION }}
    - name: Create changelog
      run: |
        $GITHUB_WORKSPACE/scripts/changelog_md2deb.py $GITHUB_WORKSPACE/src/snapcast/changelog.md > $GITHUB_WORKSPACE/debian/changelog
        cat $GITHUB_WORKSPACE/debian/changelog
    - name: Setup environment
      run: |
        echo "SHA=$(git -C $GITHUB_WORKSPACE/src/snapcast rev-parse HEAD)" >> $GITHUB_ENV
        echo "PARENT_DIR=$(dirname $GITHUB_WORKSPACE)" >> $GITHUB_ENV
        BOOST_DOT_VERSION=$(echo ${BOOST_VERSION} | sed 's/_/./g')
        echo "BOOST_DOT_VERSION=$BOOST_DOT_VERSION" >> $GITHUB_ENV
        echo "BOOST=boost_${BOOST_VERSION}" >> $GITHUB_ENV
    - name: Clean up
      run: rm -rf ${{env.PARENT_DIR}}/snap*_${{ matrix.arch }}.deb
    - name: Cache boost
      id: cache-boost
      uses: actions/cache@v2
      with:
        path: ${{env.BOOST}}
        key: ${{ runner.os }}-boost
    - name: Get boost
      if: steps.cache-boost.outputs.cache-hit != 'true'
      run: |
        wget https://boostorg.jfrog.io/artifactory/main/release/${{env.BOOST_DOT_VERSION}}/source/${{env.BOOST}}.tar.bz2
        tar xjf ${{env.BOOST}}.tar.bz2
    - name: Create deb package
      run: |
        fakeroot make -f debian/rules CMAKEFLAGS="-DBOOST_ROOT=$GITHUB_WORKSPACE/${{env.BOOST}} -DCMAKE_BUILD_TYPE:STRING=Release -DREVISION=${{ env.SHA }} -DBUILD_WITH_PULSE=OFF" binary
        rename 's/_${{ matrix.arch }}/_without-pulse_${{ matrix.arch }}/g' ../snapclient*_${{ matrix.arch }}.deb
        fakeroot make -f debian/rules clean
        fakeroot make -f debian/rules CMAKEFLAGS="-DBOOST_ROOT=$GITHUB_WORKSPACE/${{env.BOOST}} -DCMAKE_BUILD_TYPE:STRING=Release -DREVISION=${{ env.SHA }}" binary
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: snapcast_${{ matrix.arch }}-debian-${{matrix.image}}-${{env.SHA}}
        path: ${{env.PARENT_DIR}}/snap*_${{ matrix.arch }}.deb
